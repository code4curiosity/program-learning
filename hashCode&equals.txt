 为什么重写 equals 时必须重写 hashCode 方法？
 当我们创建的类new 出来的对象需要用到类对应的散列表时（用HashSet，HashMap等利用散列表这种方式进行查找所存储对象的数据结构），
 对于对象的判等是根据hashCode和equals确定的，此时必须同时重写两个方法



public class HashCodeEqual {
    public static void main(String[] args) {
        Apple a1 = new Apple("Blue");
        Apple a2 = new Apple("Green");
        
        HashMap<Apple, Integer> map = new HashMap<>();
        map.put(a1, 10);
        map.put(a2, 20);
        
        System.out.println(map.get(new Apple("Green")));
    }
}

class Apple {
    public String color;
    
    public Apple(String color) {
        this.color = color;
    }
    
    @Override
    public boolean equals(Object obj) {
        if(! (obj instanceof Apple))
            return false;
        if(obj == this)
            return true;
        return this.color.equals(((Apple)obj).color);
    }
}



